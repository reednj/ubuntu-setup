#
# Rakefile to set up Ubuntu to have nginx and passenger for running
# ruby apps
#

# force sudo get the password, because it might be needed later on
system "sudo echo sudo activated"

namespace "ruby" do
    task "chruby" do
        unless File.exist? "/usr/local/share/chruby/chruby.sh" 
            name = "chruby-0.3.9"
            sh "wget -O #{name}.tar.gz https://github.com/postmodern/chruby/archive/v0.3.9.tar.gz"
            sh "tar -xzvf #{name}.tar.gz"
            
            Dir.chdir("#{name}") do 
                sh "sudo make install"
            end

            rm_rf "#{name}"
            rm_rf "#{name}.tar.gz"
        end
    end

    task "installer" do 
        unless File.exist? "/usr/local/bin/ruby-install"
            name = "ruby-install-0.6.1"
            sh "wget -O #{name}.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz"
            sh "tar -xzvf #{name}.tar.gz"
            
            Dir.chdir("#{name}") do 
                sh "sudo make install"
            end

            rm_rf "#{name}"
            rm_rf "#{name}.tar.gz"
        end
    end

    task "chruby_bashrc" => "chruby" do
        bashrc = "#{ENV['HOME']}/.bashrc"
        unless File.include?(bashrc, "chruby.sh")
            File.append(bashrc, "\nsource /usr/local/share/chruby/chruby.sh\n")
        end
    end

    task "install", [:v] => ["installer", "chruby", "chruby_bashrc"] do |t,args|
        v = args[:v] || "2.2.6"
        sh "ruby-install"
        sh "ruby-install --no-reinstall ruby #{v}"
    end

end

namespace "nginx" do
    task "install" do
        unless File.exist? "/etc/nginx/passenger.conf"
            sh "chmod 755 install.nginx.sh"
            sh "./install.nginx.sh"
        end
    end

    task "passenger" => "install" do
        nginx_config = "/etc/nginx/nginx.conf"
        comment_line = "# include /etc/nginx/passenger.conf;"
        if File.include?(nginx_config, comment_line)
            s = comment_line.slice(1..-1).strip
            d = File.read(nginx_config).gsub(comment_line, s)
            File.write(nginx_config, d)
            puts "#{nginx_config} updated: #{s}"
        end
    end

    task "site", [:name] => "passenger" do |t, args|
        name = args[:name] 
        config_path = "/etc/nginx/sites-available/#{name}"
        config = "server {
            listen 80;
            server_name #{name};
            passenger_enabled on; 
            passenger_ruby /var/www/#{name}/passenger-ruby;
            root /var/www/#{name}/public; 
        }\n"

        raise "site name required" if name.nil?

        if !File.exist? "/var/www/#{name}"
            mkdir_p "/var/www/#{name}"
        end

        if !File.exist? config_path
            File.write(config_path, config)
            ln_s config_path, config_path.gsub("sites-available", "sites-enabled")
        end
    end
end

class File
	def self.append(path, data)
		File.open(path, 'a:UTF-8') do |file| 
			file.write data 
		end
	end

    def self.include?(path, pattern)
        File.read(path).include? pattern
    end
end
